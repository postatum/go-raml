// DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.
package theclient

import (
	"net/http"
)

const (
	defaultBaseURI = ""
)

type ExampleAPI struct {
	client     http.Client
	AuthHeader string // Authorization header, will be sent on each request if not empty
	BaseURI    string
	common     service // Reuse a single struct instead of allocating one for each service on the heap.

	Configs *ConfigsService
	Dirs    *DirsService
}

type service struct {
	client *ExampleAPI
}

func NewExampleAPI() *ExampleAPI {
	c := &ExampleAPI{
		BaseURI: defaultBaseURI,
		client:  http.Client{},
	}
	c.common.client = c

	c.Configs = (*ConfigsService)(&c.common)
	c.Dirs = (*DirsService)(&c.common)

	return c
}
