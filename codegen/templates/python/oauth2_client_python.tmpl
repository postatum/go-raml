{{- define "oauth2_client_python" -}}
# DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.

import requests

class {{.ClassName}}:
    def __init__(self, http_client, access_token_uri='{{.Settings.accessTokenUri}}'):
        self.access_token_uri = access_token_uri
        self._http_client = http_client

    def get_access_token(self, client_id, client_secret, scopes=[], audiences=[]):
        params = {
            'grant_type': 'client_credentials',
            'client_id': client_id,
            'client_secret': client_secret
        }
        if len(scopes) > 0:
            params['scope'] = ','.join(scopes)
        if len(audiences) > 0:
            params['aud'] = ','.join(audiences)
        
        return requests.post(self.access_token_uri, params=params)
    {{ if .Headers}}
    {{ range $k, $v := .Headers}}
    def set_{{ToLower $v.Name}}_header(self, val):
        """" Set header {{$v.Name}} to 'Bearer <val>'"""
        self._http_client.set_header('{{$v.Name}}', 'Bearer %s' % val)
    {{ end }}
    {{ else }}
    def set_authorization_header(self, val):
        """" Set header Authorization to 'Bearer <val>'"""
        self._http_client.set_header('Authorization', 'Bearer %s' % val)
    {{ end }}
{{- end -}}
