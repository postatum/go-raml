{{- define "server_resource_if_sanic" -}}
# DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.

from sanic import Blueprint
from sanic.views import HTTPMethodView
from sanic.response import text
from . import {{.Name}}_api

{{ range $k, $v := .PR.MiddlewaresArr}}
from .{{$v.ImportPath}} import {{$v.Name}}{{ end }}

{{.Name}}_if = Blueprint('{{.Name}}_if')
{{$resName := .Name}}
{{ range $k, $v := .RouteView}}
class {{$v.Name}}View(HTTPMethodView):
    {{ range $km, $vm := $v.Methods }}
    async def {{$vm.Verb| ToLower}}(self, {{$vm.ParamsSanicWithCatchAll}}):
     {{range $kmw, $vmw := $vm.MiddlewaresArr -}}{{if eq $vmw.Type "oauth2"}}
        if not await {{$vmw.Name}}([{{$vmw.Args}}]).check_token(request):
            return text('', 401)
        {{end}}{{end}}
        return await {{$resName}}_api.{{$vm.MethodName}}({{$vm.Params}})
    {{end}}

{{ if $v.IsCatchAllRoute}}{{$resName}}_if.add_route({{$v.Name}}View.as_view(), '{{$v.RouteCatchAll}}', strict_slashes=True){{end}}
{{$resName}}_if.add_route({{$v.Name}}View.as_view(), '{{$v.Route}}')
{{end}}
{{end}}
