{{- define "client_go" -}}
// DO NOT EDIT THIS FILE. This file will be overwritten when re-running go-raml.
package {{.PackageName}}

import (
	"net/http"
)

const (
	defaultBaseURI = "{{.BaseURI}}"
)

{{$apiName := .Name}}
type {{.Name}} struct {
	client http.Client
    AuthHeader string // Authorization header, will be sent on each request if not empty
    BaseURI string
    common service // Reuse a single struct instead of allocating one for each service on the heap.
    {{ range $k, $v := .Services }} 
    {{$v.EndpointName}} *{{$v.Name}}{{end}}
}

type service struct {
    client *{{.Name}}
}
func New{{.Name}}() *{{.Name}} {
    c := &{{.Name}}{
        BaseURI: defaultBaseURI,
        client: http.Client{},
    }
    c.common.client = c
    {{ range $k, $v := .Services }} 
    c.{{$v.EndpointName}} =  (*{{$v.Name}})(&c.common) {{end}}
	
    return c
}

{{- end -}}
